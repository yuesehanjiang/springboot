package com.yun.service.impl;

import java.util.HashMap;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import com.yun.constant.OSSConstant;
import com.yun.constant.ResponseMessage;
import com.yun.mapper.CoachMapper;
import com.yun.pojo.Coach;
import com.yun.service.CoachService;
import com.yun.utils.ImageCheckUtils;
import com.yun.utils.OSSUtil;
import com.yun.utils.ParameterUtil;
import com.yun.utils.ServerResponse;
import com.yun.utils.StringUtils;

@Service
@Transactional
public class CoachServiceImpl implements CoachService {

	@Autowired
	private CoachMapper coachMapper;
	
	/**
	 * 新增教练
	 */
	@Override
	public HashMap<String, Object> saveCoach(Coach coach, MultipartFile file) {
		if(StringUtils.isHasEmpty(coach.getName(), coach.getSex(),coach.getIntroduction()
				,coach.getTrainContent(),coach.getGymAddr(),coach.getRank())){
			return ServerResponse.build("202", ResponseMessage.paramIsNull);
		}
		String fileName = null;
		String filePath = null;
		try {
			fileName = StringUtils.replaceStr(file.getOriginalFilename());
			filePath = fileName;
			fileName = java.net.URLEncoder.encode(fileName, "utf-8");
			String imagePath = "https://"+OSSConstant.bucketName+".oss-cn-shenzhen.aliyuncs.com/"+OSSConstant.stagingDirectory+"/" + fileName;
			// 获取输出流
			OSSUtil.uploadObjectOSS(file, ""+OSSConstant.bucketName+"", ""+OSSConstant.stagingDirectory+"/");
			int checkUrlImage = ImageCheckUtils.checkUrlImage(imagePath);
			if(checkUrlImage != 0){		// 图片审核失败
				OSSUtil.deleteFile(OSSConstant.bucketName, ""+OSSConstant.stagingDirectory+"", filePath);
				return ServerResponse.build("203", "图片审核失败!");
			}
			int checkContent = ImageCheckUtils.checkContent(coach.getIntroduction());
			int checkContent2 = ImageCheckUtils.checkContent(coach.getTrainContent());
			if(checkContent != 0){
				return ServerResponse.build("203", "个人介绍审核失败!");
			}
			if(checkContent2 != 0){
				return ServerResponse.build("203", "训练内容审核失败!");
			}
			String imagePath2 = "https://"+OSSConstant.bucketName+".oss-cn-shenzhen.aliyuncs.com/"+OSSConstant.coachShowImageFold+"/" + fileName;
			OSSUtil.uploadObjectOSS(file, ""+OSSConstant.bucketName+"", ""+OSSConstant.coachShowImageFold+"/");
			coach.setImage(imagePath2);
			int saveUserShow = coachMapper.saveCoach(coach);
			if(saveUserShow > 0){
				OSSUtil.deleteFile(OSSConstant.bucketName, ""+OSSConstant.stagingDirectory+"", filePath);
				return ServerResponse.build("200", ResponseMessage.success);
			} else {
				OSSUtil.deleteFile(OSSConstant.bucketName, ""+OSSConstant.stagingDirectory+"", filePath);
				return ServerResponse.build("203", ResponseMessage.exception);
			}
		} catch (Exception e) {
			OSSUtil.deleteFile(OSSConstant.bucketName, ""+OSSConstant.stagingDirectory+"", filePath);
			return ServerResponse.build("203", ResponseMessage.exception);
		}
	}

	/**
	 * 查询所有教练
	 */
	@Override
	public HashMap<String, Object> listCoachInfo(ParameterUtil parameterUtil) {
		if(StringUtils.isHasEmpty(parameterUtil.getPageNum(), parameterUtil.getPageSize(), parameterUtil.getGymAddr())){
			return ServerResponse.build("202", ResponseMessage.paramIsNull);
		}
		HashMap<String, Object> calculationPage = StringUtils.calculationPage(parameterUtil.getPageNum(), parameterUtil.getPageSize());
		parameterUtil.setPageNum(calculationPage.get("pageNum")+"");
		parameterUtil.setPageSize(calculationPage.get("pageSize")+"");
		List<Coach> listCoachInfo = coachMapper.listCoachInfo(parameterUtil);
		if(listCoachInfo.size() < 1){
			return ServerResponse.build("204", ResponseMessage.isNull);
		}
		int coachCount = coachMapper.getCoachCount(parameterUtil);
		return ServerResponse.build("200", ResponseMessage.success, listCoachInfo, coachCount, calculationPage.get("pNum")+"", parameterUtil.getPageSize());
	}

	/**
	 * 根据id查询教练
	 */
	@Override
	public HashMap<String, Object> getCoachById(String value) {
		if(StringUtils.isHasEmpty(value)){
			return ServerResponse.build("202", ResponseMessage.paramIsNull);
		}
		Coach coachById = coachMapper.getCoachById(value);
		if(coachById != null){
			return ServerResponse.build("200", ResponseMessage.success, coachById);
		} else {
			return ServerResponse.build("204", ResponseMessage.isNull);
		}
	}

	/**
	 * 删除教练
	 */
	@Override
	public HashMap<String, Object> delCoach(String value) {
		if(StringUtils.isHasEmpty(value)){
			return ServerResponse.build("202", ResponseMessage.paramIsNull);
		}
		int delCoach = coachMapper.delCoach(value);
		if(delCoach > 0){
			return ServerResponse.build("200", ResponseMessage.success);
		} else {
			return ServerResponse.build("203", ResponseMessage.exception);
		}
	}

	/**
	 * 修改教练
	 */
	@Override
	public HashMap<String, Object> updateCoach(Coach coach, MultipartFile file) {
		if(StringUtils.isHasEmpty(coach.getName(), coach.getSex(), coach.getIntroduction(), 
				coach.getId(), coach.getTrainContent())){
			return ServerResponse.build("202", ResponseMessage.paramIsNull);
		}
		String fileName = null;
		String filePath = null;
		try {
			fileName = StringUtils.replaceStr(file.getOriginalFilename());
			filePath = fileName;
			fileName = java.net.URLEncoder.encode(fileName, "utf-8");
			String imagePath = "https://"+OSSConstant.bucketName+".oss-cn-shenzhen.aliyuncs.com/"+OSSConstant.stagingDirectory+"/" + fileName;
			// 获取输出流
			OSSUtil.uploadObjectOSS(file, ""+OSSConstant.bucketName+"", ""+OSSConstant.stagingDirectory+"/");
			int checkUrlImage = ImageCheckUtils.checkUrlImage(imagePath);
			if(checkUrlImage != 0){		// 图片审核失败
				OSSUtil.deleteFile(OSSConstant.bucketName, ""+OSSConstant.stagingDirectory+"", filePath);
				return ServerResponse.build("203", "图片审核失败!");
			}
			int checkContent = ImageCheckUtils.checkContent(coach.getIntroduction());
			if(checkContent != 0){
				return ServerResponse.build("203", "个人介绍审核失败!");
			}
			int checkContent2 = ImageCheckUtils.checkContent(coach.getTrainContent());
			if(checkContent2 != 0){
				return ServerResponse.build("203", "训练内容审核失败!");
			}
			String imagePath2 = "https://"+OSSConstant.bucketName+".oss-cn-shenzhen.aliyuncs.com/"+OSSConstant.coachShowImageFold+"/" + fileName;
			OSSUtil.uploadObjectOSS(file, ""+OSSConstant.bucketName+"", ""+OSSConstant.coachShowImageFold+"/");
			coach.setImage(imagePath2);
			int saveUserShow = coachMapper.updateCoach(coach);
			if(saveUserShow > 0){
				OSSUtil.deleteFile(OSSConstant.bucketName, ""+OSSConstant.stagingDirectory+"", filePath);
				return ServerResponse.build("200", ResponseMessage.success);
			} else {
				OSSUtil.deleteFile(OSSConstant.bucketName, ""+OSSConstant.stagingDirectory+"", filePath);
				return ServerResponse.build("203", ResponseMessage.exception);
			}
		} catch (Exception e) {
			OSSUtil.deleteFile(OSSConstant.bucketName, ""+OSSConstant.stagingDirectory+"", filePath);
			return ServerResponse.build("203", ResponseMessage.exception);
		}
	}

	/**
	 * 修改点赞数
	 */
	@Override
	public HashMap<String, Object> updateVote(String id) {
		if(StringUtils.isHasEmpty(id)){
			return ServerResponse.build("202", ResponseMessage.paramIsNull);
		}
		int updateVote = coachMapper.updateVote(id);
		if(updateVote > 0){
			return ServerResponse.build("200", ResponseMessage.success);
		} else {
			return ServerResponse.build("203", ResponseMessage.exception);
		}
	}
	
}
